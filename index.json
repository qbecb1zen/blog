[{"content":"","date":"30 July 2023","permalink":"/tags/audit-code/","section":"Tags","summary":"","title":"Audit code"},{"content":" Définition # Un audit de code est un processus d\u0026rsquo;évaluation technique et approfondie du code source d\u0026rsquo;une application logicielle afin de détecter les erreurs de programmation et les vulnérabilités de sécurité. L\u0026rsquo;objectif principal de cet audit est d\u0026rsquo;identifier les failles potentielles qui pourraient être exploitées par des attaquants pour compromettre la sécurité du système ou provoquer un dysfonctionnement de l\u0026rsquo;application. L\u0026rsquo;audit de code est réalisé à l\u0026rsquo;aide d\u0026rsquo;outils d\u0026rsquo;analyse statique et dynamique du code, ainsi que par des examens manuels effectués par des experts en sécurité informatique. Les résultats de l\u0026rsquo;audit de code sont présentés dans un rapport détaillé, fournissant une liste des vulnérabilités détectées et des recommandations pour les corriger, permettant ainsi d\u0026rsquo;améliorer la qualité et la sécurité de l\u0026rsquo;application.\nObjectif de l\u0026rsquo;audit : # L\u0026rsquo;audit de code a pour objectif principal de détecter les vulnérabilités de sécurité et les erreurs de programmation dans le code source d\u0026rsquo;une application. Il vise à identifier les failles potentielles qui pourraient être exploitées par des attaquants pour compromettre la sécurité du système et de proposer un plan d\u0026rsquo;action pour les corriger.\nSuite à quel type d\u0026rsquo;audit on fait ce genre d\u0026rsquo;audit? # L\u0026rsquo;audit de code est généralement réalisé dans le cadre d\u0026rsquo;un audit de sécurité plus large, tel qu\u0026rsquo;un audit de sécurité des applications ou un audit de sécurité des systèmes d\u0026rsquo;information. Il est également réalisé lors de la phase de développement ou avant le déploiement d\u0026rsquo;une application pour s\u0026rsquo;assurer que le code est sûr et conforme aux meilleures pratiques de sécurité. Il est aussi réalisé lors du processus classique : Boite noire -\u0026gt; Boîte grise -\u0026gt; Boîte blanche (ICI)\nMéthodologie étape par étape : # Il n\u0026rsquo;y a pas de méthodologie type, mais globalement, un audit de code se structure sur les axes suivants :\nAnalyse des exigences de sécurité : Comprendre les exigences de sécurité spécifiques de l\u0026rsquo;application à auditer pour orienter l\u0026rsquo;audit. Revue du code source : Analyser le code source ligne par ligne à l\u0026rsquo;aide d\u0026rsquo;outils d\u0026rsquo;analyse statique pour identifier les vulnérabilités potentielles. Identification des vulnérabilités : Rechercher des erreurs courantes telles que les injections SQL, les XSS (Cross-Site Scripting), les CSRF (Cross-Site Request Forgery), les erreurs de gestion des sessions, etc. Analyse de la configuration de sécurité : Examiner la configuration de l\u0026rsquo;application pour s\u0026rsquo;assurer que les paramètres de sécurité sont correctement définis. Test des contrôles de sécurité : Vérifier l\u0026rsquo;efficacité des contrôles de sécurité implémentés dans l\u0026rsquo;application pour se prémunir contre les attaques. Rapport d\u0026rsquo;audit : Présenter les résultats de l\u0026rsquo;audit, y compris les vulnérabilités identifiées et les recommandations pour les corriger. Déroulement de l\u0026rsquo;audit : # L\u0026rsquo;audit de code commence généralement par une analyse statique du code source, qui consiste à utiliser des outils d\u0026rsquo;analyse automatisée pour identifier les erreurs et les vulnérabilités. Ensuite, des tests manuels sont effectués pour vérifier les contrôles de sécurité et détecter les vulnérabilités plus complexes. Enfin, un rapport détaillé est généré, fournissant une liste complète des vulnérabilités détectées et des recommandations pour les corriger.\nAttendus clients de l\u0026rsquo;audit : # Les clients qui font réaliser un audit de code attendent de recevoir un rapport complet et précis sur les vulnérabilités détectées dans leur code source. Ils souhaitent également recevoir des recommandations concrètes pour corriger ces vulnérabilités et améliorer la sécurité globale de l\u0026rsquo;application. Ainsi le rapport idéalement doit comporter à minima les éléments suivants :\nSynthèse globale (overall view) Un plan d\u0026rsquo;action issu des vulnérabilités remontés par l\u0026rsquo;audit Quelques exemples de vulnérabilités courantes identifiées lors d\u0026rsquo;un audit de code : # Quelques exemples de vulnérabilités classiques découvertes lors des audit de code :\nInjection SQL : L\u0026rsquo;absence de validation ou d\u0026rsquo;échappement des entrées utilisateur peut permettre aux attaquants d\u0026rsquo;injecter des requêtes SQL malveillantes, compromettant ainsi la base de données et pouvant entraîner la divulgation d\u0026rsquo;informations sensibles (exemple : \u0026ldquo;SELECT * FROM users WHERE username=\u0026rsquo;$username\u0026rsquo;;\u0026rdquo;).\nCross-Site Scripting (XSS) : Des données non vérifiées insérées dans des pages Web peuvent permettre aux attaquants d\u0026rsquo;injecter du code malveillant dans les navigateurs des utilisateurs, ce qui peut entraîner des vols de session ou des redirections vers des sites frauduleux (exemple : \u0026lt;script\u0026gt;code malveillant ici\u0026lt;/\u0026gt;\u0026quot;).\nCross-Site Request Forgery (CSRF) : Les attaquants peuvent inciter les utilisateurs authentifiés à envoyer des requêtes non intentionnelles à un site Web, par exemple, en cliquant sur un lien malveillant dans un e-mail, ce qui peut entraîner des actions indésirables sur le compte de l\u0026rsquo;utilisateur (exemple : envoyer un formulaire avec une action malveillante sans que l\u0026rsquo;utilisateur en soit conscient).\nMauvaise gestion des erreurs : Les messages d\u0026rsquo;erreur non gérés peuvent divulguer des informations sensibles sur l\u0026rsquo;application ou son environnement, ce qui pourrait être exploité par des attaquants pour mieux cibler leurs attaques (exemple : affichage du message d\u0026rsquo;erreur complet avec la trace du serveur).\nMauvaise validation des entrées utilisateur : Le manque de validation appropriée des entrées utilisateur peut entraîner des vulnérabilités telles que l\u0026rsquo;injection SQL ou les XSS, en permettant aux attaquants d\u0026rsquo;insérer des données malveillantes dans l\u0026rsquo;application (exemple : l\u0026rsquo;application accepte des valeurs non attendues dans les formulaires).\nUtilisation de fonctions non sécurisées : L\u0026rsquo;utilisation de fonctions non sécurisées ou obsolètes peut rendre l\u0026rsquo;application vulnérable à des attaques, par exemple, l\u0026rsquo;utilisation de fonctions de hachage faibles (exemple : MD5) qui peuvent être facilement déchiffrées.\nDépassement de tampon (Buffer Overflow) : Une mauvaise gestion des tampons peut permettre aux attaquants d\u0026rsquo;écrire des données malveillantes dans des zones mémoires adjacentes, entraînant des exécutions de code arbitraire (exemple : une variable tampon est débordée avec des données malveillantes =\u0026gt; AAAAAAAAAAAAAAAAAAAA pour faire de l\u0026rsquo;écrasement de mémoire).\nMauvaise gestion des droits : Une application qui accorde des privilèges excessifs à des utilisateurs non autorisés peut permettre aux attaquants d\u0026rsquo;accéder à des fonctionnalités ou à des données sensibles (exemple : un utilisateur non administrateur peut accéder à des pages d\u0026rsquo;administration).\nUtilisation de mots de passe en clair : Stocker les mots de passe des utilisateurs sans cryptage expose les informations sensibles en cas de violation de la base de données (exemple : stocker les mots de passe en texte brut au lieu de les hacher).\nExposition d\u0026rsquo;informations sensibles : L\u0026rsquo;exposition non autorisée de données sensibles, tels que les numéros de sécurité sociale, les informations financières, etc., peut entraîner une violation de la confidentialité et des atteintes à la vie privée (exemple : rendre accessible des informations sensibles via des API non sécurisées).\nUtilisation de composants obsolètes ou vulnérables : L\u0026rsquo;incorporation de composants logiciels obsolètes ou ayant des vulnérabilités connues peut ouvrir des portes aux attaquants qui exploitent ces faiblesses pour compromettre l\u0026rsquo;application (exemple : utilisation d\u0026rsquo;une version non corrigée d\u0026rsquo;une bibliothèque tiers).\nMauvaise gestion des sessions : Une mauvaise gestion des sessions peut conduire à des vulnérabilités de vol de session, d\u0026rsquo;usurpation d\u0026rsquo;identité et d\u0026rsquo;accès non autorisé (exemple : sessions sans expiration ou non invalidées après la déconnexion).\nInclusion de fichiers non sécurisée (Local File Inclusion) : L\u0026rsquo;inclusion de fichiers distants ou non vérifiés peut permettre aux attaquants d\u0026rsquo;accéder à des fichiers sensibles sur le serveur ou d\u0026rsquo;exécuter du code malveillant (exemple : inclusion de fichiers basée sur des entrées utilisateur non filtrées).\nUtilisation de protocoles de communication non sécurisés : L\u0026rsquo;utilisation de protocoles non sécurisés, tels que HTTP non chiffré, expose les données de l\u0026rsquo;application à des interceptions et à des attaques d\u0026rsquo;écoute passive (exemple : transmission de mots de passe en clair).\nAbsence de contrôles d\u0026rsquo;accès : L\u0026rsquo;absence de contrôles d\u0026rsquo;accès appropriés peut permettre aux utilisateurs non autorisés d\u0026rsquo;accéder à des fonctionnalités sensibles ou restreintes (exemple : un utilisateur non authentifié peut accéder à des pages d\u0026rsquo;administration).\nExposition de points d\u0026rsquo;API non sécurisés : Des API mal configurées peuvent permettre aux attaquants d\u0026rsquo;accéder à des données ou des fonctionnalités sensibles sans authentification appropriée (exemple : des API sans clés d\u0026rsquo;API ou avec des autorisations trop permissives).\nErreurs de configuration de sécurité : La mauvaise configuration des paramètres de sécurité, tels que les fichiers de configuration ou les autorisations de fichiers, peut exposer l\u0026rsquo;application à des risques inutiles (exemple : accès public à des fichiers de configuration contenant des informations sensibles).\nUtilisation de bibliothèques et de frameworks non sécurisés : L\u0026rsquo;utilisation de versions obsolètes ou vulnérables de bibliothèques et de frameworks peut exposer l\u0026rsquo;application à des failles de sécurité connues (exemple : utilisation d\u0026rsquo;une version de bibliothèque qui contient une vulnérabilité corrigée dans les versions ultérieures).\nUtilisation excessive de commentaires sensibles dans le code source : L\u0026rsquo;inclusion de commentaires sensibles dans le code peut exposer des informations confidentielles sur le fonctionnement interne de l\u0026rsquo;application (exemple : inclusion de mots de passe ou de clés API dans les commentaires).\nAbsence de mécanismes de protection contre les attaques par force brute : L\u0026rsquo;absence de mécanismes de protection, tels que des délais de verrouillage des comptes ou des CAPTCHA, peut faciliter les attaques par force brute contre les comptes d\u0026rsquo;utilisateurs (exemple : pas de limitation du nombre de tentatives de connexion).\nDocumentation utile à garder sous la main # Extrait référentiel PASSI ","date":"30 July 2023","permalink":"/posts/audit-code/","section":"Posts","summary":"Cet article technique dévoile les objectifs, la méthodologie étape par étape, et les vulnérabilités courantes identifiées lors d\u0026rsquo;un audit de code.","title":"Audit de Code : La quête des vulnérabilités cachées dans vos applications."},{"content":"","date":"30 July 2023","permalink":"/categories/blog/","section":"Categories","summary":"","title":"Blog"},{"content":"","date":"30 July 2023","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":" Introduction à l\u0026rsquo;ISO 19011 : Lignes directrices pour l\u0026rsquo;audit de systèmes de management # L\u0026rsquo;ISO 19011 est une norme internationale développée par l\u0026rsquo;Organisation internationale de normalisation (ISO). Publiée pour la première fois en 2002, cette norme a été révisée en 2011 pour refléter les dernières pratiques et évolutions en matière d\u0026rsquo;audit de systèmes de management. L\u0026rsquo;ISO 19011 fournit des lignes directrices essentielles pour les auditeurs, leur permettant de mener des évaluations systématiques, impartiales et efficaces des systèmes de management, y compris ceux liés à la qualité, à l\u0026rsquo;environnement, à la santé et à la sécurité au travail, à la sécurité des systèmes d\u0026rsquo;information, et bien d\u0026rsquo;autres domaines.\nLes objectifs de l\u0026rsquo;ISO 19011 : # L\u0026rsquo;ISO 19011 vise à établir des principes et des lignes directrices pour les audits de systèmes de management afin de :\nAssurer une approche cohérente et harmonisée des audits, quel que soit le domaine spécifique du système de management. Favoriser l\u0026rsquo;amélioration continue des systèmes de management grâce à des évaluations régulières et pertinentes. Renforcer la confiance des parties prenantes (clients, actionnaires, organismes de réglementation, etc.) dans l\u0026rsquo;efficacité et la performance des systèmes de management. Fournir des orientations pour les auditeurs, tant internes qu\u0026rsquo;externes, en matière de compétences, de comportement et d\u0026rsquo;éthique professionnelle. Les grands axes de l\u0026rsquo;ISO 19011 : # L\u0026rsquo;ISO 19011 met l\u0026rsquo;accent sur cinq grands axes pour la réalisation d\u0026rsquo;audits de systèmes de management de qualité :\nPrincipes d\u0026rsquo;audit # Cette partie énonce les principes fondamentaux qui guident les auditeurs tout au long du processus d\u0026rsquo;audit. Ces principes incluent l\u0026rsquo;intégrité, l\u0026rsquo;éthique, l\u0026rsquo;indépendance, l\u0026rsquo;approche basée sur les preuves, la gestion des risques et la confidentialité. Ils garantissent que l\u0026rsquo;audit est mené de manière juste, impartiale et systématique, en utilisant des éléments factuels pour évaluer la conformité et l\u0026rsquo;efficacité du système de management.\nGestion d\u0026rsquo;un programme d\u0026rsquo;audit # Cette section aborde les aspects pratiques de la planification, de la mise en œuvre et de l\u0026rsquo;amélioration d\u0026rsquo;un programme d\u0026rsquo;audit. Elle explique comment établir un plan d\u0026rsquo;audit, définir les objectifs et les critères d\u0026rsquo;audit, sélectionner les auditeurs qualifiés, gérer les ressources, et suivre les résultats des audits pour assurer leur efficacité.\nRéalisation d\u0026rsquo;audits # Cette partie couvre les étapes clés de la réalisation d\u0026rsquo;un audit, depuis la préparation initiale jusqu\u0026rsquo;à la communication des résultats. Elle explique comment effectuer des entrevues avec le personnel, collecter et analyser des preuves, évaluer la conformité, et identifier les opportunités d\u0026rsquo;amélioration. Elle met également l\u0026rsquo;accent sur la communication ouverte et constructive avec l\u0026rsquo;organisation auditée pour faciliter la compréhension et l\u0026rsquo;acceptation des résultats d\u0026rsquo;audit.\nCompétences et évaluation des auditeurs # Cette section détaille les compétences nécessaires pour être un auditeur qualifié et compétent. Elle fournit des orientations pour évaluer les compétences des auditeurs, développer leurs connaissances techniques et comportementales, et veiller à ce qu\u0026rsquo;ils maintiennent leur niveau de compétence tout au long de leur carrière.\nEvaluation des personnes réalisant des audits de systèmes de management # Cette partie s\u0026rsquo;applique aux organismes de certification et aux organismes d\u0026rsquo;accréditation impliqués dans l\u0026rsquo;évaluation des personnes réalisant des audits de systèmes de management. Elle définit les exigences en matière de qualification, d\u0026rsquo;expérience et de compétences pour les auditeurs, garantissant ainsi l\u0026rsquo;intégrité et la crédibilité du processus de certification.\n","date":"30 July 2023","permalink":"/posts/iso-19011/","section":"Posts","summary":"Cet article propose une analyse approfondie de l\u0026rsquo;ISO 19011, la norme incontournable fournissant des directives essentielles pour réaliser des audits efficaces et rigoureux, favorisant ainsi la performance et la conformité des systèmes de management.","title":"Décryptage de l'ISO 19011 : Lignes directrices essentielles pour des audits de qualité."},{"content":"","date":"30 July 2023","permalink":"/tags/iso-19011/","section":"Tags","summary":"","title":"ISO 19011"},{"content":"","date":"30 July 2023","permalink":"/","section":"l1d1nsec","summary":"","title":"l1d1nsec"},{"content":"","date":"30 July 2023","permalink":"/tags/passi/","section":"Tags","summary":"","title":"PASSI"},{"content":"","date":"30 July 2023","permalink":"/categories/passi/","section":"Categories","summary":"","title":"PASSI"},{"content":"","date":"30 July 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"30 July 2023","permalink":"/tags/preparation/","section":"Tags","summary":"","title":"Preparation"},{"content":"","date":"30 July 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":" Introduction # Tout d\u0026rsquo;abord, PASSI, dans le cadre de l\u0026rsquo;ANSSI, fait référence à une méthode d\u0026rsquo;évaluation de la sécurité des systèmes d\u0026rsquo;information. Le terme \u0026ldquo;PASSI\u0026rdquo; signifie \u0026ldquo;Prestation d\u0026rsquo;Assistance en matière de Sécurité des Systèmes d\u0026rsquo;Information\u0026rdquo;. Il s\u0026rsquo;agit d\u0026rsquo;une prestation proposée par l\u0026rsquo;ANSSI qui permet aux organisations publiques ou privées d\u0026rsquo;évaluer la sécurité de leurs systèmes d\u0026rsquo;information en faisant appel à des experts certifiés par l\u0026rsquo;ANSSI.\nJe vais passer les 5 portées certifiantes par l\u0026rsquo;ANSSI, et pour cela, je rédige une série d\u0026rsquo;articles qui ont pour objectif ce synthétiser les différents points découverts tout le long.\nISO 19011 # L\u0026rsquo;ISO 19011 est une norme internationale qui fournit des lignes directrices pour l\u0026rsquo;audit de systèmes de management, y compris les audits liés à la sécurité des systèmes d\u0026rsquo;information. Cette norme joue un rôle crucial dans le contexte du PASSI, car elle définit les principes et les processus fondamentaux de l\u0026rsquo;audit, ainsi que les compétences requises pour mener à bien ces évaluations. Pour réussir le PASSI, les auditeurs doivent être familiers avec les directives de l\u0026rsquo;ISO 19011 et être en mesure de les appliquer de manière cohérente tout au long du processus d\u0026rsquo;audit. Cette norme met l\u0026rsquo;accent sur des éléments tels que la planification de l\u0026rsquo;audit, la collecte de preuves, l\u0026rsquo;analyse des résultats, la communication des conclusions, et la surveillance des actions correctives. Se conformer à l\u0026rsquo;ISO 19011 garantit que l\u0026rsquo;audit est mené de manière méthodique, impartiale et efficace, ce qui contribue à l\u0026rsquo;obtention de résultats fiables et pertinents.\nAudit Organisationnel # L\u0026rsquo;audit organisationnel est la première étape cruciale dans la préparation au PASSI. Elle exige une compréhension approfondie des processus et des politiques de sécurité de l\u0026rsquo;organisation. Vous devrez vous familiariser avec les normes de sécurité en vigueur, telles que ISO 27001, et comprendre leur mise en œuvre dans l\u0026rsquo;entreprise. Il est important de se concentrer sur l\u0026rsquo;identification et l\u0026rsquo;évaluation des risques liés à la sécurité des systèmes d\u0026rsquo;information. Vous devrez également analyser la gouvernance de la sécurité, les rôles et les responsabilités des différents acteurs impliqués dans la sécurité de l\u0026rsquo;organisation. La documentation et la communication des résultats sont des compétences essentielles pour cette portée.\nAudit de Configuration # L\u0026rsquo;audit de configuration implique l\u0026rsquo;évaluation des configurations techniques des systèmes, des applications et des périphériques utilisés dans l\u0026rsquo;organisation. Pour cette étape, il est essentiel d\u0026rsquo;acquérir une connaissance approfondie des meilleures pratiques de sécurité pour la configuration des systèmes d\u0026rsquo;exploitation, des bases de données, des pare-feu, des routeurs, etc. Vous devrez identifier les paramètres de sécurité mal configurés, les vulnérabilités potentielles et les éventuelles erreurs de configuration. Une expertise en outils d\u0026rsquo;audit de sécurité, tels que Nessus ou OpenVAS, peut s\u0026rsquo;avérer précieuse pour automatiser certaines tâches de découverte et d\u0026rsquo;analyse des vulnérabilités.\nAudit d\u0026rsquo;Architecture # Dans cette étape, vous examinerez en détail l\u0026rsquo;architecture globale du système d\u0026rsquo;information de l\u0026rsquo;organisation. Cela implique de comprendre la conception des réseaux, des serveurs, des applications et des services, ainsi que les interactions entre eux. Une solide connaissance des principes de conception sécurisée est nécessaire pour identifier les éventuelles failles de sécurité et les points de vulnérabilité dans l\u0026rsquo;architecture. Vous devrez également être capable d\u0026rsquo;évaluer la résilience du système face aux attaques potentielles et de proposer des mesures d\u0026rsquo;amélioration pour renforcer la sécurité de l\u0026rsquo;infrastructure.\nAudit de Code # L\u0026rsquo;audit de code est une étape fondamentale pour évaluer la sécurité des applications développées en interne ou utilisées par l\u0026rsquo;organisation. Vous devrez vous familiariser avec les principaux langages de programmation utilisés dans l\u0026rsquo;entreprise et comprendre les meilleures pratiques de sécurité liées au développement logiciel, telles que l\u0026rsquo;évitement des injections SQL, la gestion des sessions sécurisées, la validation des entrées, etc. L\u0026rsquo;utilisation d\u0026rsquo;outils d\u0026rsquo;analyse statique et dynamique du code, comme SonarQube ou OWASP ZAP, est essentielle pour identifier les vulnérabilités et les erreurs de programmation susceptibles d\u0026rsquo;être exploitées par des attaquants.\nAudit Test d\u0026rsquo;Intrusion # L\u0026rsquo;audit test d\u0026rsquo;intrusion, souvent appelé \u0026ldquo;pentest\u0026rdquo;, est l\u0026rsquo;étape finale et la plus pratique du PASSI. Elle consiste à simuler une attaque réelle sur les systèmes de l\u0026rsquo;organisation pour évaluer leur résistance face à une intrusion potentielle. Pour cette portée, vous devrez vous former aux méthodes d\u0026rsquo;attaque courantes, telles que l\u0026rsquo;ingénierie sociale, le scan de ports, l\u0026rsquo;exploitation de vulnérabilités, etc. Vous devrez également apprendre à documenter rigoureusement chaque étape du test et à fournir des recommandations pour améliorer la sécurité des systèmes testés. Une bonne connaissance des lois et réglementations en matière de cybersécurité est essentielle, car les tests d\u0026rsquo;intrusion doivent être effectués de manière légale et éthique.\nConclusion # Ainsi, pour ma préparation pour l\u0026rsquo;audit, je vais rédiger tout le long de la semaine, 1 article par portée qui résume globalement mes découvertes sur les différentes portées. Chaque article qui suivera celui-ci sera principalement composé de : - Objectif de l\u0026rsquo;audit - Suite à quel type d\u0026rsquo;audit - Méthodologie d\u0026rsquo;audit - Déroulement de l\u0026rsquo;audit - Attendus clients - Quelques vulnérabilités types de l\u0026rsquo;audit - Documentation pratique ANSSI (ou autre)\n","date":"29 July 2023","permalink":"/posts/passi/","section":"Posts","summary":"Cet article relate ma méthodologie rigoureuse et mes découvertes techniques lors de ma préparation aux 5 épreuves du PASSI, offrant un aperçu approfondi du monde mature de la cybersécurité.","title":"Préparation au PASSI"},{"content":" 🎓 Graduaded of a Master of Engineering in Computer Science and CyberSecurity @CentraleSupélec 📚 I’m actively looking for interesting open source projects to contribute to. 👯 Co-founder and CTO of a promising Cybersecurity Startup, feel free to contact me. 📫 I am often available through my Twitter/LinkedIn for a tech chat around a virtual cup of coffee ☕. ","date":"1 January 0001","permalink":"/about/","section":"l1d1nsec","summary":"🎓 Graduaded of a Master of Engineering in Computer Science and CyberSecurity @CentraleSupélec 📚 I’m actively looking for interesting open source projects to contribute to. 👯 Co-founder and CTO of a promising Cybersecurity Startup, feel free to contact me.","title":""},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]